- name: set hostname
  hostname:
    name: '{{ hostname }}.{{ domain }}'

- name: set timezone
  timezone:
    name: '{{ timezone }}'

- name: set default gateway
  copy:
    content: "{{ gateway }}\n"
    dest: /etc/mygate

- name: generate hostname.if
  template:
    src: hostname.if.j2
    dest: /etc/hostname.{{ interface }}

- name: generate private hostname.if
  template:
    src: hostname-private.if.j2
    dest: /etc/hostname.{{ private_interface }}
  when: private_interface is defined
  notify: enable private network

- name: create /etc in www chroot
  file:
    path: /var/www/etc
    state: directory

- name: generate resolv.conf
  template:
    src: resolv.conf.j2
    dest: '{{ item }}'
  with_items:
    - /etc/resolv.conf
    - /var/www/etc/resolv.conf

- name: generate ntpd.conf
  template:
    src: ntpd.conf.j2
    dest: /etc/ntpd.conf
  notify: restart ntpd

- name: create ssh group
  group:
    gid: 22
    name: _ssh

- name: add users to ssh group
  user:
    name: '{{ item }}'
    groups: _ssh
    append: yes
  with_items: '{{ [provision_username] + (ssh_users | default([])) }}'

- name: add ssh keys
  authorized_key:
    user: '{{ provision_username }}'
    key: '{{ item }}'
  with_items: '{{ ssh_keys }}'

- name: generate sshd_config
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
  notify: restart sshd

- name: generate /etc/hosts
  template:
    src: hosts.j2
    dest: '{{ item }}'
  with_items:
    - /etc/hosts
    - /var/www/etc/hosts

- name: generate login.conf
  template:
    src: login.conf.j2
    dest: /etc/login.conf
  notify: rebuild login database

- name: generate pf.conf
  template:
    src: pf.conf.j2
    dest: /etc/pf.conf
  notify: reload pf

- name: set crontab path
  lineinfile:
    regexp: ^PATH=
    line: PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
    path: /var/cron/tabs/root

- name: disable sndiod
  service:
    name: sndiod
    enabled: no
    state: stopped

- name: touch log files
  copy:
    content: ""
    dest: /var/log/{{ item }}
    force: no
    mode: 0640
  with_items: '{{ syslog_log_files }}'
  notify: reload syslog

- name: generate syslog configuration
  copy:
    src: syslog.conf
    dest: /etc/syslog.conf
  notify: reload syslog

- name: generate newsyslog configuration
  copy:
    src: newsyslog.conf
    dest: /etc/newsyslog.conf
  notify: newsyslog

- name: set dank MOTD
  template:
    src: motd.j2
    dest: /etc/motd

- name: generate dhparams
  command: openssl dhparam -out /etc/ssl/dhparam.pem 2048
  args:
    creates: /etc/ssl/dhparam.pem

- name: set up permissions on /var/www/{tmp,run}
  file:
    path: /var/www/{{ item }}
    state: directory
    mode: 01775
    owner: www
    group: www
  with_items:
    - tmp
    - run

- name: set up permissions on /var/www/cache
  file:
    path: /var/www/cache
    state: directory
    mode: 0755
    owner: root
    group: daemon

- name: chown /var/www/logs
  file:
    path: /var/www/logs
    state: directory
    mode: 0750
    owner: www
    group: wheel
